{"ast":null,"code":"const isPrime = (startNumber, endNumber) => {\n  let listPrime = [];\n\n  for (let count = startNumber; count <= endNumber; count++) {\n    let divisores = 0;\n\n    for (let aux = 1; aux <= count; aux++) if (count % aux == 0) divisores++;\n\n    if (divisores == 2) {\n      listPrime.push(count);\n    }\n  }\n\n  return listPrime;\n};\n\nconst formatToTable = toFormat => {\n  let test = [];\n  toFormat.forEach((element, index) => {\n    return test.push({\n      id: index,\n      number: element\n    });\n  });\n};\n\nmodule.exports = {\n  formatToTable\n};","map":{"version":3,"sources":["/home/rds/Projects/teste_bridge/client/src/utils/utils.js"],"names":["isPrime","startNumber","endNumber","listPrime","count","divisores","aux","push","formatToTable","toFormat","test","forEach","element","index","id","number","module","exports"],"mappings":"AAAA,MAAMA,OAAO,GAAG,CAACC,WAAD,EAAcC,SAAd,KAA4B;AAC1C,MAAIC,SAAS,GAAG,EAAhB;;AACA,OAAK,IAAIC,KAAK,GAAGH,WAAjB,EAA8BG,KAAK,IAAIF,SAAvC,EAAkDE,KAAK,EAAvD,EAA2D;AACzD,QAAIC,SAAS,GAAG,CAAhB;;AAEA,SAAK,IAAIC,GAAG,GAAG,CAAf,EAAkBA,GAAG,IAAIF,KAAzB,EAAgCE,GAAG,EAAnC,EAAuC,IAAIF,KAAK,GAAGE,GAAR,IAAe,CAAnB,EAAsBD,SAAS;;AAEtE,QAAIA,SAAS,IAAI,CAAjB,EAAoB;AAClBF,MAAAA,SAAS,CAACI,IAAV,CAAeH,KAAf;AACD;AACF;;AACD,SAAOD,SAAP;AACD,CAZD;;AAcA,MAAMK,aAAa,GAAIC,QAAD,IAAc;AAClC,MAAIC,IAAI,GAAG,EAAX;AAEAD,EAAAA,QAAQ,CAACE,OAAT,CAAiB,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACnC,WAAOH,IAAI,CAACH,IAAL,CAAU;AAAEO,MAAAA,EAAE,EAAED,KAAN;AAAaE,MAAAA,MAAM,EAAEH;AAArB,KAAV,CAAP;AACD,GAFD;AAGD,CAND;;AAOAI,MAAM,CAACC,OAAP,GAAiB;AACfT,EAAAA;AADe,CAAjB","sourcesContent":["const isPrime = (startNumber, endNumber) => {\n  let listPrime = [];\n  for (let count = startNumber; count <= endNumber; count++) {\n    let divisores = 0;\n\n    for (let aux = 1; aux <= count; aux++) if (count % aux == 0) divisores++;\n\n    if (divisores == 2) {\n      listPrime.push(count);\n    }\n  }\n  return listPrime;\n};\n\nconst formatToTable = (toFormat) => {\n  let test = [];\n\n  toFormat.forEach((element, index) => {\n    return test.push({ id: index, number: element });\n  });\n};\nmodule.exports = {\n  formatToTable,\n};\n"]},"metadata":{},"sourceType":"module"}
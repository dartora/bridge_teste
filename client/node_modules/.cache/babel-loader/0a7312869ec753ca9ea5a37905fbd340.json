{"ast":null,"code":"var _jsxFileName = \"/home/rds/Projects/teste_bridge/client/src/components/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./../assets/logo.svg\";\nimport logoBridge from \"./../assets/logoBridge.svg\";\nimport './../css/App.css';\nimport InputComponent from './../components/InputComponent';\nimport DataTables from '../components/myTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      result: [],\n      rows: []\n    };\n\n    this.updateResultState = value => {\n      this.setState({\n        result: value\n      });\n    };\n\n    this.teste = value => {\n      console.log(value);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          className: \"App-logo\",\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: logoBridge,\n          alt: \"logoBridge\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Teste pr\\xE1tico\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(InputComponent, {\n          setStateResult: this.updateResultState //passo a função para o filho sem chamar ela\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [this.state.result.forEach((element, index) => {\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"index, element\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 22\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App; // let test = [];\n// if (value)\n// value.forEach((element, index) => {\n// return test.push(index, element);\n// });\n// console.log('t2', test);\n// this.setState({ rows: test });","map":{"version":3,"sources":["/home/rds/Projects/teste_bridge/client/src/components/App.js"],"names":["React","Component","InputComponent","DataTables","App","state","result","rows","updateResultState","value","setState","teste","console","log","render","logo","logoBridge","forEach","element","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAGA,OAAO,kBAAP;AACA,OAAOC,cAAP,MAA2B,gCAA3B;AACA,OAAOC,UAAP,MAAuB,uBAAvB;;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BI,KAD0B,GAClB;AACNC,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,IAAI,EAAE;AAFA,KADkB;;AAAA,SAM1BC,iBAN0B,GAMLC,KAAD,IAAW;AAC7B,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,MAAM,EAAEG;AAAV,OAAd;AACD,KARyB;;AAAA,SAS1BE,KAT0B,GASjBF,KAAD,IAAW;AACjBG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACD,KAXyB;AAAA;;AAa1BK,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAAA,gCACE;AAAK,UAAA,GAAG,EAAEC,IAAV;AAAgB,UAAA,SAAS,EAAC,UAA1B;AAAqC,UAAA,GAAG,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,GAAG,EAAEC,UAAV;AAAsB,UAAA,GAAG,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAA,gCACE,QAAC,cAAD;AACE,UAAA,cAAc,EAAE,KAAKR,iBADvB,CAC0C;;AAD1C;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAA,qBACG,KAAKH,KAAL,CAAWC,MAAX,CAAkBW,OAAlB,CAA0B,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAC7C,gCAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD,WAFA,CADH,eAIE;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAqBD;;AAnCyB;;AAsC5B,eAAef,GAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from 'react';\nimport logo from './../assets/logo.svg';\nimport logoBridge from './../assets/logoBridge.svg';\nimport './../css/App.css';\nimport InputComponent from './../components/InputComponent';\nimport DataTables from '../components/myTable';\n\nclass App extends Component {\n  state = {\n    result: [],\n    rows: [],\n  };\n\n  updateResultState = (value) => {\n    this.setState({ result: value });\n  };\n  teste = (value) => {\n    console.log(value);\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <img src={logoBridge} alt=\"logoBridge\" />\n          <h3>Teste prático</h3>\n        </header>\n        <div>\n          <InputComponent\n            setStateResult={this.updateResultState} //passo a função para o filho sem chamar ela\n          ></InputComponent>\n          <p>\n            {this.state.result.forEach((element, index) => {\n              return <td>index, element</td>;\n            })}\n            <br />\n          </p>\n          {/* <DataTables onChange={this.state.rows}></DataTables> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n// let test = [];\n// if (value)\n// value.forEach((element, index) => {\n// return test.push(index, element);\n// });\n// console.log('t2', test);\n// this.setState({ rows: test });\n"]},"metadata":{},"sourceType":"module"}